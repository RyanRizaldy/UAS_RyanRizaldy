/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uas_ryanrizaldy;

import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Desktop;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC
 */
public class InStoreOrder extends javax.swing.JFrame {

    /**
     * Creates new form InStoreOrder
     */
    private DefaultTableModel model;
    public long total;
    public long bayar;
    public long kembali;
    public Statement st;

    Connection cn = Koneksi.getKoneksi();

    public InStoreOrder() {
        initComponents();
        model = new DefaultTableModel();

        table.setModel(model);
        model.addColumn("id");
        model.addColumn("menu_name");
        model.addColumn("harga satuan");
        model.addColumn("jumlah beli");
        model.addColumn("total_harga");
        loadData();
        nofaktur();

    }

    public void FilterHuruf(KeyEvent a) {
        if (Character.isDigit(a.getKeyChar())) {
            a.consume();
            JOptionPane.showMessageDialog(null, "masukan huruf saja!", "peringatan",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    public void FilterAngka(KeyEvent a) {
        if (Character.isAlphabetic(a.getKeyChar())) {
            a.consume();
            JOptionPane.showMessageDialog(null, "masukan angka saja!", "peringatan",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    public final void loadData() {
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT * FROM tb_hitung_jual";
            ResultSet r = s.executeQuery(sql);
            while (r.next()) {
                Object[] o = new Object[5];
                o[0] = r.getString("id");
                o[1] = r.getString("nama_menu");
                o[2] = r.getInt("harga_satuan");
                o[3] = r.getInt("jumlah");
                o[4] = r.getInt("total_harga");
                model.addRow(o);
            }
            r.close();
            s.close();
        } catch (SQLException e) {
            System.out.println("Terjadi Errorssss");
            System.out.println(e);

        }

    }

    private void nofaktur() {
      try {
        Connection c = Koneksi.getKoneksi();
        Statement s = c.createStatement();
        String sql = "SELECT * FROM pentualan_takeaway ORDER by no_penjualan desc";
        ResultSet r = s.executeQuery(sql);
        if (r.next()) {
            String nofak = r.getString("no_penjualan");
            System.out.println("Last invoice number: " + nofak); // Debug print

            // Check if the string starts with "TA"
            if (nofak.startsWith("TA")) {
                nofak = nofak.substring(2); // Get the numeric part
            } else {
                throw new NumberFormatException("Invalid invoice format");
            }

            // Ensure nofak is numeric
            int numericPart = Integer.parseInt(nofak); // This line may throw NumberFormatException
            String AN = "" + (numericPart + 1);
            String Nol = "";

            switch (AN.length()) {
                case 1:
                    Nol = "000";
                    break;
                case 2:
                    Nol = "00";
                    break;
                case 3:
                    Nol = "0";
                    break;
                case 4:
                    Nol = "";
                    break;
            }

            no_penjualan.setText("IS" + Nol + AN);
        } else {
            no_penjualan.setText("IS0001");
        }
    } catch (SQLException e) {
        System.out.println(e);
    } catch (NumberFormatException e) {
        System.out.println("Error parsing number: " + e.getMessage());
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        back_button = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        pancake_txt = new javax.swing.JLabel();
        pancake_quantity = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        pancake_add = new javax.swing.JButton();
        pancake_price = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        salad_txt = new javax.swing.JLabel();
        salad_add = new javax.swing.JButton();
        salad_quantity = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        salad_price = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        steak_txt = new javax.swing.JLabel();
        steak_add = new javax.swing.JButton();
        steak_quantity = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        mixberry_txt = new javax.swing.JLabel();
        mixberry_add = new javax.swing.JButton();
        mixberry_quantity = new javax.swing.JSpinner();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        raspberry_txt = new javax.swing.JLabel();
        raspberry_add = new javax.swing.JButton();
        raspberry_quantity = new javax.swing.JSpinner();
        jLabel20 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        blueberry_txt = new javax.swing.JLabel();
        blueberry_add = new javax.swing.JButton();
        blueberry_quantity = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        totalPrice = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        buy = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        kembalian = new javax.swing.JLabel();
        complete_transaction = new javax.swing.JButton();
        print = new javax.swing.JButton();
        totalPrice1 = new javax.swing.JLabel();
        no_penjualan = new javax.swing.JTextField();
        calculate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/MealsOnWheels1.png"))); // NOI18N

        back_button.setText("Back");
        back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_buttonActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/store.png"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel3.setText("In Store Order");

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel1.setText("Foods");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pancake.png"))); // NOI18N

        pancake_txt.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        pancake_txt.setText("Pancake and Berry");

        jLabel5.setText("$");

        pancake_add.setText("add");
        pancake_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pancake_addActionPerformed(evt);
            }
        });

        pancake_price.setText("8");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pancake_txt))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pancake_price, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(pancake_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(pancake_add)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pancake_txt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(pancake_price))
                .addGap(10, 10, 10)
                .addComponent(pancake_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pancake_add)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/salad.jpg"))); // NOI18N

        salad_txt.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        salad_txt.setText("Roasted Vegetables");

        salad_add.setText("add");
        salad_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salad_addActionPerformed(evt);
            }
        });

        jLabel12.setText("$");

        salad_price.setText("9");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salad_price, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(salad_add))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(salad_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(salad_txt))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salad_txt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(salad_price))
                .addGap(10, 10, 10)
                .addComponent(salad_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(salad_add)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/steak.jpg"))); // NOI18N

        steak_txt.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        steak_txt.setText("Salmon Burger");

        steak_add.setText("add");
        steak_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                steak_addActionPerformed(evt);
            }
        });

        jLabel13.setText("$");

        jLabel17.setText("10");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(steak_txt)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(steak_add))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(steak_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(jLabel13)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(steak_txt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel17))
                .addGap(10, 10, 10)
                .addComponent(steak_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(steak_add)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jLabel14.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel14.setText("Drinks");

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/strawberryJuice.png"))); // NOI18N

        mixberry_txt.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        mixberry_txt.setText("Light Berry Juice");

        mixberry_add.setText("add");
        mixberry_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mixberry_addActionPerformed(evt);
            }
        });

        jLabel31.setText("$");

        jLabel32.setText("8");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(mixberry_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(mixberry_add)))
                    .addComponent(mixberry_txt))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mixberry_txt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32))
                .addGap(10, 10, 10)
                .addComponent(mixberry_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(mixberry_add)
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/raspberryJuice.png"))); // NOI18N

        raspberry_txt.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        raspberry_txt.setText("Raspberry Choco Juice");

        raspberry_add.setText("add");
        raspberry_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raspberry_addActionPerformed(evt);
            }
        });

        jLabel20.setText("$");

        jLabel28.setText("8");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel23)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(raspberry_txt))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(raspberry_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(raspberry_add)))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(raspberry_txt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel28))
                .addGap(10, 10, 10)
                .addComponent(raspberry_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(raspberry_add)
                .addContainerGap())
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/berryJuice.png"))); // NOI18N

        blueberry_txt.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        blueberry_txt.setText("Blueberry Juice");

        blueberry_add.setText("add");
        blueberry_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blueberry_addActionPerformed(evt);
            }
        });

        jLabel18.setText("$");

        jLabel19.setText("8");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel12Layout.createSequentialGroup()
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel18)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel12Layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(blueberry_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(blueberry_add)))
                            .addComponent(blueberry_txt))))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(blueberry_txt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19))
                .addGap(10, 10, 10)
                .addComponent(blueberry_quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blueberry_add)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        table.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Payment", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Yu Gothic UI Light", 0, 18))); // NOI18N

        jLabel27.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jLabel27.setText("Total Price :");

        totalPrice.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        totalPrice.setText("0");

        jLabel29.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jLabel29.setText("Money Given :");

        buy.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        buy.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        buy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyActionPerformed(evt);
            }
        });
        buy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buyKeyReleased(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jLabel30.setText("Return :");

        kembalian.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        kembalian.setText("0");

        complete_transaction.setText("Complete transaction");
        complete_transaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                complete_transactionActionPerformed(evt);
            }
        });

        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        totalPrice1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        totalPrice1.setText("$");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kembalian))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(totalPrice1))
                            .addComponent(jLabel29))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buy, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalPrice))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(complete_transaction)
                        .addContainerGap(128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(print))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(totalPrice)
                    .addComponent(totalPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(buy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(kembalian))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(complete_transaction)
                .addGap(18, 18, 18)
                .addComponent(print)
                .addContainerGap())
        );

        no_penjualan.setEditable(false);

        calculate.setText("Calculate");
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(back_button)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(no_penjualan, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jLabel14)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(calculate)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(back_button)
                        .addGap(1, 1, 1)
                        .addComponent(no_penjualan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(calculate)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_buttonActionPerformed
        Dashboard dashboard = new Dashboard();
        dashboard.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_back_buttonActionPerformed

    private void buyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buyActionPerformed

    private void steak_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_steak_addActionPerformed
              if (no_penjualan.getText().equals("") || pancake_quantity.getValue() == null) {
            JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String noPembelian = no_penjualan.getText();
            
            //nama menu
            JLabel jlabel = new JLabel("Salmon Burger");
            String namaMenu = steak_txt.getText();

            // Pastikan pancake_price memiliki teks yang valid untuk diubah menjadi integer
            JLabel harga = new JLabel("10");
            String Sharga = harga.getText();
            int valueHarga = 0;
            try {
                valueHarga = Integer.parseInt(Sharga);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Harga tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan pancake_quantity memiliki nilai yang valid untuk diubah menjadi integer
            JSpinner jSpinner = new JSpinner(new SpinnerNumberModel(10, 0, 100, 1));
            Object jumlahObj = steak_quantity.getValue();
            int valueJumlah = 0;
            if (jumlahObj instanceof Integer) {
                valueJumlah = (Integer) jumlahObj;
            } else {
                JOptionPane.showMessageDialog(null, "Jumlah tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int totalHarga = valueHarga * valueJumlah;

            try {
                Connection c = Koneksi.getKoneksi();
                String sql = "INSERT INTO tb_hitung_jual VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement p = c.prepareStatement(sql);
                p.setString(1, null);
                p.setString(2, noPembelian);
                p.setString(3, namaMenu);
                p.setInt(4, valueHarga);
                p.setInt(5, valueJumlah);
                p.setInt(6, totalHarga);

                p.executeUpdate();
                p.close();
            } catch (SQLException e) {
                System.out.println("Terjadi Error");
                System.out.println(e);
            } finally {
                nofaktur();
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
                loadData();
            }
        }
    }//GEN-LAST:event_steak_addActionPerformed

    private void pancake_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pancake_addActionPerformed
        if (no_penjualan.getText().equals("") || pancake_quantity.getValue() == null) {
            JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String noPembelian = no_penjualan.getText();
            
            //nama menu
            JLabel jlabel = new JLabel("pancake and berry");
            String namaMenu = pancake_txt.getText();

            // Pastikan pancake_price memiliki teks yang valid untuk diubah menjadi integer
            JLabel harga = new JLabel("8");
            String Sharga = harga.getText();
            int valueHarga = 0;
            try {
                valueHarga = Integer.parseInt(Sharga);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Harga tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan pancake_quantity memiliki nilai yang valid untuk diubah menjadi integer
            JSpinner jSpinner = new JSpinner(new SpinnerNumberModel(10, 0, 100, 1));
            Object jumlahObj = pancake_quantity.getValue();
            int valueJumlah = 0;
            if (jumlahObj instanceof Integer) {
                valueJumlah = (Integer) jumlahObj;
            } else {
                JOptionPane.showMessageDialog(null, "Jumlah tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int totalHarga = valueHarga * valueJumlah;

            try {
                Connection c = Koneksi.getKoneksi();
                String sql = "INSERT INTO tb_hitung_jual VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement p = c.prepareStatement(sql);
                p.setString(1, null);
                p.setString(2, noPembelian);
                p.setString(3, namaMenu);
                p.setInt(4, valueHarga);
                p.setInt(5, valueJumlah);
                p.setInt(6, totalHarga);

                p.executeUpdate();
                p.close();
            } catch (SQLException e) {
                System.out.println("Terjadi Error");
                System.out.println(e);
            } finally {
                nofaktur();
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
                loadData();
            }
        }
    }//GEN-LAST:event_pancake_addActionPerformed

    private void salad_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salad_addActionPerformed
              if (no_penjualan.getText().equals("") || pancake_quantity.getValue() == null) {
            JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String noPembelian = no_penjualan.getText();
            
            //nama menu
            JLabel jlabel = new JLabel("Roasted Vegetables");
            String namaMenu = salad_txt.getText();

            // Pastikan pancake_price memiliki teks yang valid untuk diubah menjadi integer
            JLabel harga = new JLabel("9");
            String Sharga = harga.getText();
            int valueHarga = 0;
            try {
                valueHarga = Integer.parseInt(Sharga);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Harga tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan pancake_quantity memiliki nilai yang valid untuk diubah menjadi integer
            JSpinner jSpinner = new JSpinner(new SpinnerNumberModel(10, 0, 100, 1));
            Object jumlahObj = salad_quantity.getValue();
            int valueJumlah = 0;
            if (jumlahObj instanceof Integer) {
                valueJumlah = (Integer) jumlahObj;
            } else {
                JOptionPane.showMessageDialog(null, "Jumlah tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int totalHarga = valueHarga * valueJumlah;

            try {
                Connection c = Koneksi.getKoneksi();
                String sql = "INSERT INTO tb_hitung_jual VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement p = c.prepareStatement(sql);
                p.setString(1, null);
                p.setString(2, noPembelian);
                p.setString(3, namaMenu);
                p.setInt(4, valueHarga);
                p.setInt(5, valueJumlah);
                p.setInt(6, totalHarga);

                p.executeUpdate();
                p.close();
            } catch (SQLException e) {
                System.out.println("Terjadi Error");
                System.out.println(e);
            } finally {
                nofaktur();
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
                loadData();
            }
        }
    }//GEN-LAST:event_salad_addActionPerformed

    private void mixberry_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mixberry_addActionPerformed
              if (no_penjualan.getText().equals("") || pancake_quantity.getValue() == null) {
            JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String noPembelian = no_penjualan.getText();
            
            //nama menu
            JLabel jlabel = new JLabel("pancake and berry");
            String namaMenu = mixberry_txt.getText();

            // Pastikan pancake_price memiliki teks yang valid untuk diubah menjadi integer
            JLabel harga = new JLabel("8");
            String Sharga = harga.getText();
            int valueHarga = 0;
            try {
                valueHarga = Integer.parseInt(Sharga);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Harga tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan pancake_quantity memiliki nilai yang valid untuk diubah menjadi integer
            JSpinner jSpinner = new JSpinner(new SpinnerNumberModel(10, 0, 100, 1));
            Object jumlahObj = mixberry_quantity.getValue();
            int valueJumlah = 0;
            if (jumlahObj instanceof Integer) {
                valueJumlah = (Integer) jumlahObj;
            } else {
                JOptionPane.showMessageDialog(null, "Jumlah tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int totalHarga = valueHarga * valueJumlah;

            try {
                Connection c = Koneksi.getKoneksi();
                String sql = "INSERT INTO tb_hitung_jual VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement p = c.prepareStatement(sql);
                p.setString(1, null);
                p.setString(2, noPembelian);
                p.setString(3, namaMenu);
                p.setInt(4, valueHarga);
                p.setInt(5, valueJumlah);
                p.setInt(6, totalHarga);

                p.executeUpdate();
                p.close();
            } catch (SQLException e) {
                System.out.println("Terjadi Error");
                System.out.println(e);
            } finally {
                nofaktur();
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
                loadData();
            }
        }
    }//GEN-LAST:event_mixberry_addActionPerformed

    private void raspberry_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raspberry_addActionPerformed
              if (no_penjualan.getText().equals("") || pancake_quantity.getValue() == null) {
            JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String noPembelian = no_penjualan.getText();
            
            //nama menu
            JLabel jlabel = new JLabel("pancake and berry");
            String namaMenu = raspberry_txt.getText();

            // Pastikan pancake_price memiliki teks yang valid untuk diubah menjadi integer
            JLabel harga = new JLabel("8");
            String Sharga = harga.getText();
            int valueHarga = 0;
            try {
                valueHarga = Integer.parseInt(Sharga);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Harga tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan pancake_quantity memiliki nilai yang valid untuk diubah menjadi integer
            JSpinner jSpinner = new JSpinner(new SpinnerNumberModel(10, 0, 100, 1));
            Object jumlahObj = raspberry_quantity.getValue();
            int valueJumlah = 0;
            if (jumlahObj instanceof Integer) {
                valueJumlah = (Integer) jumlahObj;
            } else {
                JOptionPane.showMessageDialog(null, "Jumlah tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int totalHarga = valueHarga * valueJumlah;

            try {
                Connection c = Koneksi.getKoneksi();
                String sql = "INSERT INTO tb_hitung_jual VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement p = c.prepareStatement(sql);
                p.setString(1, null);
                p.setString(2, noPembelian);
                p.setString(3, namaMenu);
                p.setInt(4, valueHarga);
                p.setInt(5, valueJumlah);
                p.setInt(6, totalHarga);

                p.executeUpdate();
                p.close();
            } catch (SQLException e) {
                System.out.println("Terjadi Error");
                System.out.println(e);
            } finally {
                nofaktur();
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
                loadData();
            }
        }
    }//GEN-LAST:event_raspberry_addActionPerformed

    private void blueberry_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blueberry_addActionPerformed
              if (no_penjualan.getText().equals("") || pancake_quantity.getValue() == null) {
            JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
        } else {
            String noPembelian = no_penjualan.getText();
            
            //nama menu
            JLabel jlabel = new JLabel("pancake and berry");
            String namaMenu = blueberry_txt.getText();

            // Pastikan pancake_price memiliki teks yang valid untuk diubah menjadi integer
            JLabel harga = new JLabel("8");
            String Sharga = harga.getText();
            int valueHarga = 0;
            try {
                valueHarga = Integer.parseInt(Sharga);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Harga tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Pastikan pancake_quantity memiliki nilai yang valid untuk diubah menjadi integer
            JSpinner jSpinner = new JSpinner(new SpinnerNumberModel(10, 0, 100, 1));
            Object jumlahObj = blueberry_quantity.getValue();
            int valueJumlah = 0;
            if (jumlahObj instanceof Integer) {
                valueJumlah = (Integer) jumlahObj;
            } else {
                JOptionPane.showMessageDialog(null, "Jumlah tidak valid!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int totalHarga = valueHarga * valueJumlah;

            try {
                Connection c = Koneksi.getKoneksi();
                String sql = "INSERT INTO tb_hitung_jual VALUES (?, ?, ?, ?, ?, ?)";
                PreparedStatement p = c.prepareStatement(sql);
                p.setString(1, null);
                p.setString(2, noPembelian);
                p.setString(3, namaMenu);
                p.setInt(4, valueHarga);
                p.setInt(5, valueJumlah);
                p.setInt(6, totalHarga);

                p.executeUpdate();
                p.close();
            } catch (SQLException e) {
                System.out.println("Terjadi Error");
                System.out.println(e);
            } finally {
                nofaktur();
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan", "Meals On Wheels", JOptionPane.INFORMATION_MESSAGE);
                loadData();
            }
        }
    }//GEN-LAST:event_blueberry_addActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
              int jawaban;
        if ((jawaban = JOptionPane.showConfirmDialog(null, "Yakin batal?", "Konfirmasi", JOptionPane.YES_NO_OPTION)) == 0) {
            try {
                int i = table.getSelectedRow();
                if (i == -1) {
                    return;
                }
                String id = (String) model.getValueAt(i, 0);
                st = cn.createStatement();
                st.executeUpdate("delete from tb_hitung_jual where id = '" + id + "'");
                nofaktur();
                loadData();
            } catch (Exception e) {
                e.printStackTrace();
       }
}
    }//GEN-LAST:event_tableMouseClicked

    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateActionPerformed
              try {
            Connection c = Koneksi.getKoneksi();
            Statement s = c.createStatement();
            String sql = "SELECT SUM(`total_harga`) AS total FROM tb_hitung_jual";
            ResultSet r = s.executeQuery(sql);

            while (r.next()) {
                totalPrice.setText(r.getString("" + "total"));

            }
            r.close();
            s.close();
        } catch (SQLException e) {
            System.out.println("Terjadi Error");
        }
    }//GEN-LAST:event_calculateActionPerformed

    private void buyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buyKeyReleased
       bayar = Integer.parseInt(String.valueOf(buy.getText()));
        total = Integer.parseInt(String.valueOf(totalPrice.getText()));
        kembali = bayar - total;

        kembalian.setText(Long.toString(kembali));
    }//GEN-LAST:event_buyKeyReleased

    private void complete_transactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_complete_transactionActionPerformed
                if (buy.getText().equals("") || kembalian.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "LENGKAPI DATA !", "Aplikasi Penjualan",
                    JOptionPane.INFORMATION_MESSAGE);

        } else {
            String a = kembalian.getText();
            int ab = Integer.parseInt(String.valueOf(kembalian.getText()));
            if (ab < 0) {
                JOptionPane.showMessageDialog(null, "Uang anda kurang", "Aplikasi Penjualan",
                        JOptionPane.INFORMATION_MESSAGE);
                buy.setText("");
                kembalian.setText("");
            } else {
                try {
                    Connection c = Koneksi.getKoneksi();
                    Statement s = c.createStatement();
                    String sql = "SELECT * FROM tb_hitung_jual";
                    ResultSet r = s.executeQuery(sql);
                    while (r.next()) {
                        long millis = System.currentTimeMillis();
                        java.sql.Date date = new java.sql.Date(millis);
                        System.out.println(date);
                        String tgl = date.toString();
                        String sqla = "INSERT INTO penjualan (no_penjualan, menu_name, harga_satuan, jumlah_barang, total_harga, bayar, kembalian, tanggal) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

                        PreparedStatement p = c.prepareStatement(sqla);
                        p.setString(1, no_penjualan.getText());
                        p.setString(2, r.getString("nama_menu"));
                        p.setString(3, r.getString("harga_satuan"));
                        p.setString(4, r.getString("jumlah"));
                        p.setString(5, r.getString("total_harga"));
                        p.setString(6, buy.getText());
                        p.setString(7, kembalian.getText());
                        p.setString(8, tgl);

                        p.executeUpdate();
                        p.close();

                    }
                    r.close();
                    s.close();
                } catch (SQLException e) {
                    System.out.println(e);
                } finally {
                    try {
                        String sqla = "TRUNCATE tb_hitung_jual";
                        java.sql.Connection conn = (Connection) Koneksi.getKoneksi();
                        java.sql.PreparedStatement pst = conn.prepareStatement(sqla);
                        pst.execute();
                        JOptionPane.showMessageDialog(null, "TRANSAKSI SELESAI", "Aplikasi Penjualan",
                                JOptionPane.INFORMATION_MESSAGE);
                        loadData();
                        //kode_barang.setText(text_kembalian.getText());
                        buy.setText("");
                        kembalian.setText("");
                        totalPrice.setText("");
                        nofaktur();
                        print.setEnabled(true);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_complete_transactionActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        
              try {
        // Definisi nama file PDF
        String filePath = "invoice_pembelian.pdf";
        long millis = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(millis);
        String tanggal= date.toString();

        // Inisialisasi objek Dokumen PDF
        Document document = new Document();
        PdfWriter.getInstance(document, new FileOutputStream(filePath));
        document.open();

        // Membuat paragraf dengan teks
            Paragraph Judul = new Paragraph("Invoice Pembelian");
             Paragraph pt = new Paragraph("Meals On Wheels");

            // Mengatur alignment paragraf ke center
            Judul.setAlignment(Paragraph.ALIGN_CENTER);
            pt.setAlignment(Paragraph.ALIGN_CENTER);
        
        // Menambahkan judul
        document.add(Judul);
        document.add(Chunk.NEWLINE); // Baris baru (newline) atau
        document.add(pt);
        document.add(Chunk.NEWLINE);
        document.add(new Paragraph("No Penjualan:" + no_penjualan.getText()));
        document.add(new Paragraph("Tanggal:" + tanggal));
        document.add(Chunk.NEWLINE);

        // Membuat tabel untuk data penjualan
        com.itextpdf.text.pdf.PdfPTable pdfTable = new com.itextpdf.text.pdf.PdfPTable(model.getColumnCount());
        for (int i = 0; i < model.getColumnCount(); i++) {
            pdfTable.addCell(model.getColumnName(i));
        }

        // Menambahkan data dari tabel model ke tabel PDF
        for (int row = 0; row < model.getRowCount(); row++) {
            for (int col = 0; col < model.getColumnCount(); col++) {
                pdfTable.addCell(model.getValueAt(row, col).toString());
            }
        }

        // Menambahkan tabel ke dokumen PDF
        document.add(pdfTable);
        
        document.add(Chunk.NEWLINE); // Baris baru (newline) atau
        
         // Menambahkan total pendapatan ke dokumen PDF
        document.add(new Paragraph("Total harga: " + totalPrice.getText()));
        
        document.add(new Paragraph("Di bayar : " + buy.getText()));
       
        document.add(new Paragraph("Kembalian: " + kembalian.getText()));
        
        document.close();

        // Memberitahu pengguna bahwa PDF telah berhasil dibuat
        JOptionPane.showMessageDialog(null, "PDF telah berhasil dibuat: " + filePath);

        // Membuka file PDF di default PDF viewer
        File file = new File(filePath);
        if (file.exists()) {
            Desktop.getDesktop().open(file);
        } else {
            JOptionPane.showMessageDialog(null, "File PDF tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    } catch (DocumentException | IOException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InStoreOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InStoreOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InStoreOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InStoreOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InStoreOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back_button;
    private javax.swing.JButton blueberry_add;
    private javax.swing.JSpinner blueberry_quantity;
    private javax.swing.JLabel blueberry_txt;
    private javax.swing.JTextField buy;
    private javax.swing.JButton calculate;
    private javax.swing.JButton complete_transaction;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel kembalian;
    private javax.swing.JButton mixberry_add;
    private javax.swing.JSpinner mixberry_quantity;
    private javax.swing.JLabel mixberry_txt;
    private javax.swing.JTextField no_penjualan;
    private javax.swing.JButton pancake_add;
    private javax.swing.JLabel pancake_price;
    private javax.swing.JSpinner pancake_quantity;
    private javax.swing.JLabel pancake_txt;
    private javax.swing.JButton print;
    private javax.swing.JButton raspberry_add;
    private javax.swing.JSpinner raspberry_quantity;
    private javax.swing.JLabel raspberry_txt;
    private javax.swing.JButton salad_add;
    private javax.swing.JLabel salad_price;
    private javax.swing.JSpinner salad_quantity;
    private javax.swing.JLabel salad_txt;
    private javax.swing.JButton steak_add;
    private javax.swing.JSpinner steak_quantity;
    private javax.swing.JLabel steak_txt;
    private javax.swing.JTable table;
    private javax.swing.JLabel totalPrice;
    private javax.swing.JLabel totalPrice1;
    // End of variables declaration//GEN-END:variables
}
